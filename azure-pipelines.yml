# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'  # Path to your Gradle wrapper
    tasks: 'build'  # Replace with the tasks you want to run
    options: '-Xmx3072m'  # Memory option
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'  # Pattern for test result files
    javaHomeOption: 'JDKVersion'  # This lets you specify which JDK to use
    jdkVersionOption: '1.11'  # Ensure this is compatible with your Gradle version (e.g., Java 8 or 11)
    jdkArchitectureOption: 'x64'

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy .apk files to artifact staging directory

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: 'drop'
    artifactType: 'container'
  displayName: Publish artifacts